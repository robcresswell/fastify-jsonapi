// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`api > returns a well formed api 1`] = `
{
  "components": {
    "schemas": {},
  },
  "info": {
    "title": "@fastify/swagger",
    "version": "9.4.0",
  },
  "openapi": "3.0.3",
  "paths": {
    "/empty": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response",
          },
        },
      },
    },
    "/items": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "default": "name",
              "enum": [
                "name",
                "-name",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "page[size]",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "page[after]",
            "required": false,
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "page[before]",
            "required": false,
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "enum": [
                "other",
                "more",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "filter[name]",
            "required": false,
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "filter[name][eq]",
            "required": false,
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "filter[name][gte]",
            "required": false,
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "filter[name][gt]",
            "required": false,
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "filter[name][lt]",
            "required": false,
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "filter[name][lte]",
            "required": false,
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "filter[name][ne]",
            "required": false,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "properties": {
                          "attributes": {
                            "properties": {
                              "createdAt": {
                                "type": "string",
                              },
                              "name": {
                                "type": "string",
                              },
                              "otherId": {
                                "type": "string",
                              },
                            },
                            "required": [
                              "name",
                              "createdAt",
                              "otherId",
                            ],
                            "type": "object",
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string",
                          },
                          "type": {
                            "enum": [
                              "item",
                            ],
                            "type": "string",
                          },
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "included": {
                      "not": {},
                    },
                    "jsonapi": {
                      "properties": {
                        "profile": {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                        },
                        "version": {
                          "enum": [
                            "1.1",
                          ],
                          "type": "string",
                        },
                      },
                      "required": [
                        "profile",
                        "version",
                      ],
                      "type": "object",
                    },
                    "links": {
                      "properties": {
                        "next": {
                          "anyOf": [
                            {
                              "format": "uri",
                              "type": "string",
                            },
                            {
                              "type": "null",
                            },
                          ],
                        },
                        "prev": {
                          "anyOf": [
                            {
                              "format": "uri",
                              "type": "string",
                            },
                            {
                              "type": "null",
                            },
                          ],
                        },
                        "self": {
                          "format": "uri",
                          "type": "string",
                        },
                      },
                      "required": [
                        "self",
                        "next",
                        "prev",
                      ],
                      "type": "object",
                    },
                    "meta": {
                      "additionalProperties": {},
                      "type": "object",
                    },
                  },
                  "required": [
                    "jsonapi",
                    "links",
                    "meta",
                    "data",
                  ],
                  "type": "object",
                  Symbol(json-schema-resolver.ignore): true,
                },
              },
            },
            "description": "Default Response",
          },
        },
      },
    },
    "/throws-error": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response",
          },
        },
      },
    },
  },
}
`;
